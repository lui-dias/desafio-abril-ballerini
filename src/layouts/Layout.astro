---
import { getLangFromUrl } from '../utils'

export interface Props {
	title: string
}

const { title } = Astro.props

const lang = getLangFromUrl(Astro.url)
---

<!DOCTYPE html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
        <meta name="title" content="Faça algo mágico..." />
        <meta name="description" content="Encontre tudo em um só lugar!" />
		<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
		<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
		<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
		<link rel="manifest" href="/site.webmanifest" />
		<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
		<meta name="msapplication-TileColor" content="#da532c" />
		<meta name="theme-color" content="#ffffff" />

        <!-- THEME -->
		<script is:inline>
			const theme = (() => {
				if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
					return localStorage.getItem('theme')
				}
				if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
					return 'dark'
				}
				return 'light'
			})()

			if (theme === 'light') {
				document.documentElement.classList.remove('dark')
			} else {
				document.documentElement.classList.add('dark')
			}
			window.localStorage.setItem('theme', theme)
		</script>

        <!-- PWA -->
		<script>
			if ('serviceWorker' in navigator) {
				await navigator.serviceWorker.register('/sw.js')
			}
		</script>
		<title>{title}</title>
	</head>
	<body class="bg-zinc-100 dark:bg-zinc-900 font-sans">
		<slot />
	</body>
</html>
